"use strict";var z=Object.create;var w=Object.defineProperty;var q=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,Q=Object.prototype.hasOwnProperty;var X=(t,e)=>{for(var n in e)w(t,n,{get:e[n],enumerable:!0})},D=(t,e,n,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of G(e))!Q.call(t,o)&&o!==n&&w(t,o,{get:()=>e[o],enumerable:!(i=q(e,o))||i.enumerable});return t};var u=(t,e,n)=>(n=t!=null?z(K(t)):{},D(e||!t||!t.__esModule?w(n,"default",{value:t,enumerable:!0}):n,t)),Y=t=>D(w({},"__esModule",{value:!0}),t);var ue={};X(ue,{activate:()=>de,deactivate:()=>pe});module.exports=Y(ue);var E=u(require("path")),a=u(require("vscode"));var T=u(require("crypto")),m=class{constructor(){this.hash=T.default.createHash("sha1")}update(e,n){return this.hash.update(`${e}=${n??""}
`),this}digest(){return this.hash.digest("base64url")}};var b=u(require("vscode")),Z="direnv",v=class{constructor(e){this.value=e}};async function L(t){await b.default.commands.executeCommand("workbench.action.openSettings",t.join("."))}function $(t){return new v(t)}function _(t,e){return{get(){let[n,...i]=t;return b.default.workspace.getConfiguration(n).get(i.join("."))??e.value},open(){return L(t)}}}function P(t,e){return{isAffectedBy(n){return n.affectsConfiguration(t.join("."))},open(){return L(t)},...Object.fromEntries(Object.entries(e).map(([n,i])=>[n,i instanceof v?_([...t,n],i):P([...t,n],i)]))}}var d=P([Z],{path:{executable:$("direnv")},status:{showChangesCount:$(!0)}});var N=u(require("child_process")),W=require("util"),A=u(require("vscode")),O=u(require("zlib"));var ee=(0,W.promisify)(N.default.execFile),l=class extends Error{constructor(n,i){super(`${n} is blocked`);this.path=n;this.data=i}},f=class extends Error{constructor(n){super(`${n}: command not found`);this.path=n}};function R(t){return typeof t!="object"||t===null||t===void 0?!1:"stdout"in t&&"stderr"in t}function te(t,e){return!(t instanceof Error)||!("path"in t)||!("code"in t)?!1:t.path===e&&t.code==="ENOENT"}var I={EDITOR:"echo"};function M(){return A.default.workspace.workspaceFolders?.[0].uri.path??process.cwd()}async function h(t,e){let n={encoding:"utf8",cwd:M(),env:{...process.env,TERM:"dumb",...e}},i=d.path.executable.get();try{return await ee(i,t,n)}catch(o){throw te(o,i)?new f(i):o}}async function j(){await h(["version"])}async function U(t){await h(["allow",t])}async function V(t){await h(["deny",t])}async function x(){let{stdout:t}=await h(["edit",M()],I);return t.trimEnd()}async function F(){try{let{stdout:t}=await h(["edit"],I);return t.trimEnd()}catch(t){if(R(t)&&/direnv: error (?<path>.+) not found./.exec(t.stderr))return x();throw t}}async function H(){try{let{stdout:t}=await h(["export","json"]);return B(t)}catch(t){if(R(t)){let e=/direnv: error (?<path>.+) is blocked./.exec(t.stderr);if(e&&e.groups?.path)throw new l(e.groups.path,B(t.stdout,g))}throw t}}function B(t,e=()=>!0){if(!t)return new Map;let n=JSON.parse(t);return new Map(Object.entries(n).filter(([i])=>e(i)))}function g(t){return t.startsWith("DIRENV_")}function J(t){return t===void 0?[]:ne(t.get("DIRENV_WATCHES"))??[]}function ne(t){if(!t)return;let e=Buffer.from(t,"base64url"),i=O.default.inflateSync(e).toString("utf8");return JSON.parse(i)}var p=class{constructor(e,n,i,o=()=>this){this.text=e;this.tooltip=n;this.command=i;this.refresh=o}static loaded(e){let n="$(folder-active)";return d.status.showChangesCount.get()&&(n+=` +${e.added}/~${e.changed}/-${e.removed}`),new p(n,`direnv loaded: ${e.added} added, ${e.changed} changed, ${e.removed} removed
Reload\u2026`,"direnv.reload",()=>p.loaded(e))}static blocked(e){return new p("$(folder)$(shield)",`direnv blocked: ${e}
Review\u2026`,"direnv.open",()=>p.blocked(e))}},r=p;r.loading=new p("$(folder)$(sync~spin)","direnv loading\u2026"),r.empty=new p("$(folder)",`direnv empty
Create\u2026`,"direnv.create"),r.failed=new p("$(folder)$(flame)",`direnv failed
Reload\u2026`,"direnv.reload");var y=class{constructor(e){this.item=e;this.state=r.empty;e.text=r.empty.text,e.show()}dispose(){this.item.dispose()}update(e){this.state=e,this.item.text=e.text,this.item.tooltip=e.tooltip,this.item.command=e.command}refresh(){this.update(this.state.refresh())}};var re=a.default.Uri.parse("https://direnv.net/docs/installation.html"),k=class{constructor(e,n){this.context=e;this.status=n;this.output=a.default.window.createOutputChannel("direnv");this.backup=new Map;this.willLoad=new a.default.EventEmitter;this.didLoad=new a.default.EventEmitter;this.loaded=new a.default.EventEmitter;this.failed=new a.default.EventEmitter;this.blocked=new a.default.EventEmitter;this.viewBlocked=new a.default.EventEmitter;this.didUpdate=new a.default.EventEmitter;this.watchers=a.default.Disposable.from();this.willLoad.event(()=>this.onWillLoad()),this.didLoad.event(i=>this.onDidLoad(i)),this.loaded.event(()=>this.onLoaded()),this.failed.event(i=>this.onFailed(i)),this.blocked.event(i=>this.onBlocked(i)),this.viewBlocked.event(i=>this.onViewBlocked(i)),this.didUpdate.event(()=>this.onDidUpdate())}get environment(){return this.context.environmentVariableCollection}get cache(){return this.context.workspaceState}dispose(){this.output.dispose(),this.status.dispose(),this.watchers.dispose()}async allow(e){await this.try(async()=>{await U(e),this.willLoad.fire()})}async block(e){await this.try(async()=>{await V(e),this.willLoad.fire()})}didOpen(e){this.blockedPath===e&&this.viewBlocked.fire(e)}didSave(e){this.blockedPath===e&&this.viewBlocked.fire(e)}async configurationChanged(e){!d.isAffectedBy(e)||(d.path.isAffectedBy(e)&&await this.reload(),d.status.isAffectedBy(e)&&this.status.refresh())}async create(){await this.open(await x())}async open(e){e??(e=await F());let n=await ce(e),i=await a.default.workspace.openTextDocument(n);await a.default.window.showTextDocument(i),this.didOpen(e)}async reload(){await this.resetCache(),await this.load()}async reset(){this.resetEnvironment(),await this.resetCache(),await this.load()}async restore(){let e=this.restoreCache();this.updateEnvironment(e),await this.load()}restoreCache(){let e=this.cache.get("direnv.checksum");if(e===void 0)return;let n=this.cache.get("direnv.environment");if(!Array.isArray(n))return;let i=new Map(n),o=new m;if(i.forEach((s,c)=>{o.update(c,process.env[c])}),e===o.digest())return i}async updateCache(){let e=new m,n=new Array;this.backup.forEach((i,o)=>{e.update(o,i),n.push([o,process.env[o]??""])}),await this.cache.update("direnv.checksum",e.digest()),await this.cache.update("direnv.environment",n)}async resetCache(){await this.cache.update("direnv.environment",void 0)}createWatcher(e){let n=E.default.dirname(e),i=E.default.basename(e),o=new a.default.RelativePattern(a.default.Uri.file(n),i),s=a.default.workspace.createFileSystemWatcher(o);return s.onDidChange(()=>this.reload()),s.onDidCreate(()=>this.reload()),s.onDidDelete(()=>this.reload()),this.output.appendLine(`watching: ${e}`),s}updateWatchers(e){this.watchers.dispose(),this.watchers=a.default.Disposable.from(...J(e).map(n=>this.createWatcher(n.Path)))}updateEnvironment(e){e!==void 0&&(e.forEach((n,i)=>{this.backup.has(i)||this.backup.set(i,process.env[i]),n??(n=""),process.env[i]=n,this.environment.replace(i,n)}),this.updateWatchers(e))}resetEnvironment(e){this.backup.forEach((n,i)=>{n===void 0?delete process.env[i]:process.env[i]=n}),this.backup.clear(),this.environment.clear(),this.updateWatchers(e)}async load(){await this.try(async()=>{await j(),this.willLoad.fire()})}async try(e){try{await e()}catch(n){this.failed.fire(n)}}async onWillLoad(){this.blockedPath=void 0,this.status.update(r.loading);try{let e=await H();this.didLoad.fire(e)}catch(e){e instanceof l&&this.blocked.fire(e)}}async onDidLoad(e){this.updateEnvironment(e),await this.updateCache(),this.loaded.fire(),![...e.keys()].every(g)&&this.didUpdate.fire()}onLoaded(){let e=r.empty;if(this.backup.size){let n=0,i=0,o=0;this.backup.forEach((s,c)=>{if(g(c))return;s===void 0?(n+=1,this.output.appendLine(`added: ${c}`)):c in process.env?(i+=1,this.output.appendLine(`changed: ${c}`)):(o+=1,this.output.appendLine(`removed: ${c}`)),s&&this.output.appendLine(`was: ${s}`);let C=process.env[c];C&&this.output.appendLine(`now: ${C}`)}),e=r.loaded({added:n,changed:i,removed:o})}this.status.update(e)}async onFailed(e){if(this.status.update(r.failed),e instanceof f){let i=["Install","Configure"],o=await a.default.window.showErrorMessage(`direnv error: ${e.message}`,...i);o==="Install"&&await a.default.env.openExternal(re),o==="Configure"&&await d.path.executable.open();return}let n=se(e);n!==void 0&&await a.default.window.showErrorMessage(`direnv error: ${n}`)}async onBlocked(e){this.blockedPath=e.path,this.resetEnvironment(e.data),await this.resetCache(),this.status.update(r.blocked(e.path));let n=["Allow","View"],i=await a.default.window.showWarningMessage(`direnv: ${e.path} is blocked`,...n);i==="Allow"&&await this.allow(e.path),i==="View"&&await this.open(e.path)}async onViewBlocked(e){await a.default.window.showInformationMessage(`direnv: Allow ${e}?`,"Allow")==="Allow"&&await this.allow(e)}async onDidUpdate(){await a.default.window.showWarningMessage("direnv: Environment updated. Restart extensions?","Restart")==="Restart"&&(a.default.env.remoteName===void 0?await a.default.commands.executeCommand("workbench.action.restartExtensionHost"):await a.default.commands.executeCommand("workbench.action.reloadWindow"))}};function se(t){if(typeof t=="string")return t;if(t instanceof Error)return t.message;console.error("unhandled error",t)}async function ce(t){let e=a.default.Uri.file(t);try{return await a.default.workspace.fs.stat(e),e}catch{return e.with({scheme:"untitled"})}}async function de(t){let e=new y(a.default.window.createStatusBarItem()),n=new k(t,e);t.subscriptions.push(n),t.subscriptions.push(a.default.commands.registerCommand("direnv.reload",async()=>{await n.reload()}),a.default.commands.registerCommand("direnv.reset",async()=>{await n.reset()}),a.default.commands.registerCommand("direnv.allow",async()=>{let i=a.default.window.activeTextEditor?.document.fileName;i!==void 0&&await n.allow(i)}),a.default.commands.registerCommand("direnv.block",async()=>{let i=a.default.window.activeTextEditor?.document.fileName;i!==void 0&&await n.block(i)}),a.default.commands.registerCommand("direnv.create",async()=>{await n.create()}),a.default.commands.registerCommand("direnv.open",async()=>{await n.open()}),a.default.workspace.onDidOpenTextDocument(i=>{n.didOpen(i.fileName)}),a.default.workspace.onDidSaveTextDocument(i=>{n.didSave(i.fileName)}),a.default.workspace.onDidChangeConfiguration(async i=>{await n.configurationChanged(i)})),await n.restore()}function pe(){}0&&(module.exports={activate,deactivate});
